[{"C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\index.js":"1","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\reportWebVitals.js":"2","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\MainBody.js":"3","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\Entry.js":"4","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\firebase.js":"5","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\NewSection.js":"6","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\NewEntry.js":"7","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\reducer.js":"8","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\ViewBooks.js":"9","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\App.js":"10","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\TestingBody.js":"11","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\EntryBody.js":"12","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\SubEntry.js":"13","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\Login.js":"14","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\Scroller.js":"15","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\Header.js":"16"},{"size":760,"mtime":1606964703590,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":6837,"mtime":1625178017951,"results":"20","hashOfConfig":"18"},{"size":505,"mtime":1606928317905,"results":"21","hashOfConfig":"18"},{"size":676,"mtime":1625575704639,"results":"22","hashOfConfig":"18"},{"size":9557,"mtime":1625604732786,"results":"23","hashOfConfig":"18"},{"size":10281,"mtime":1625568010480,"results":"24","hashOfConfig":"18"},{"size":7698,"mtime":1625530116074,"results":"25","hashOfConfig":"18"},{"size":5871,"mtime":1625579512035,"results":"26","hashOfConfig":"18"},{"size":1391,"mtime":1625578122104,"results":"27","hashOfConfig":"18"},{"size":9543,"mtime":1625579583706,"results":"28","hashOfConfig":"18"},{"size":12775,"mtime":1625604878007,"results":"29","hashOfConfig":"18"},{"size":3562,"mtime":1625604809698,"results":"30","hashOfConfig":"18"},{"size":5402,"mtime":1625580564594,"results":"31","hashOfConfig":"18"},{"size":263,"mtime":1607282688195,"results":"32","hashOfConfig":"18"},{"size":1120,"mtime":1607390673861,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"12rxons",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\index.js",["74"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { StateProvider } from './StateProvider.js'\r\nimport reducer, { initialState } from './reducer.js'\r\nimport MainBody from './MainBody';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StateProvider initialState={initialState} reducer={reducer}>\r\n      <App />\r\n      \r\n    </StateProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["75","76"],"C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\reportWebVitals.js",[],"C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\MainBody.js",["77","78","79","80","81","82"],"C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\Entry.js",[],"C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\firebase.js",[],"C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\NewSection.js",["83","84","85","86"],"C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\NewEntry.js",["87","88","89","90","91","92","93","94","95","96","97"],"import React, {useState, useEffect} from 'react'\r\nimport './NewEntry.css'\r\nimport {TextField, Button} from '@material-ui/core'\r\nimport NewSection from './NewSection.js'\r\nimport { useStateValue } from './StateProvider.js';\r\nimport EntryBody from './EntryBody.js'\r\n\r\n\r\nfunction NewEntry(props) {\r\n   // constructor(props){\r\n   //     super(props)\r\n   //     this.state = {\r\n   //         chapterTitle: '',\r\n   //         isChapterTitleSet: false,\r\n   //         sections: [],\r\n   //         thisChapter: {chapter: 'hggjhgjhgjg', sections:[{title: 'gghjghjgggk', body:'jhgjhgjhgjg'}]}\r\n   //     }\r\n   //     this.makeBody = this.makeBody.bind(this)\r\n   // }\r\n\r\n   // const [section]\r\n   const [chapterTitle, setChapterTitle] = useState(props.title)\r\n   const [isChapterTitleSet, setIsChapterTitleSet] = useState(true)\r\n   const [sections, setSections] = useState(props.sections)\r\n   const [thisChapter, setThisChapter] = useState({chapter: chapterTitle, sections:[]})\r\n   const [makeNewSection, setMakeNewSection] = useState(false)\r\n   const [{chapters}, dispatch] = useStateValue();\r\n   const [isMinimized, setIsMinimized] = useState(props.isMinimized)\r\n   const [subEntries, setSubEntries] = useState(props.content.subEntries)\r\n\r\n   const makeChapterTitle = (e) => {\r\n       //alert(e.target.value)\r\n       setIsChapterTitleSet(true)\r\n       dispatch({\r\n           type: 'ADD_CHAPTER_TITLE',\r\n           item: {\r\n               title: chapterTitle,\r\n               entryIndex: props.entryIndex,\r\n               chapterIndex: props.chapterIndex\r\n           }\r\n\r\n       })\r\n   }\r\n\r\n   const openNewSection = (e) => {\r\n       setMakeNewSection(true)\r\n   }\r\n\r\n\r\n   const makeNewEntry = (e) => {\r\n       dispatch({\r\n           type: 'ADD_NEW_SECTION',\r\n           item:{\r\n               chapterIndex: props.chapterIndex,\r\n               content: '',\r\n                \r\n               isMinimized: false,\r\n               isSet: false, \r\n               subEntries: [\r\n                    \r\n                ]\r\n                \r\n            \r\n            \r\n           }\r\n       }) \r\n   }\r\n\r\n   const maximize = (e) => {\r\n        dispatch({\r\n            type: 'MAXIMIZE_CHAPTER',\r\n            item: {\r\n                chapterIndex: props.chapterIndex\r\n            }\r\n        }) \r\n \r\n   }\r\n\r\n   const minimize = (e) => {\r\n        dispatch({\r\n            type: 'MINIMIZE_CHAPTER',\r\n            item: {\r\n                chapterIndex: props.chapterIndex\r\n            }\r\n        }) \r\n   }\r\n\r\n   useEffect(() => {\r\n       //console.log(sections)\r\n       setThisChapter(\r\n           {\r\n               chapter: chapterTitle,\r\n               sections: sections\r\n           }\r\n       )\r\n       setIsChapterTitleSet(true)\r\n   }, [])\r\n   \r\n    return(\r\n        <div className=\"newEntry\">\r\n           <div className=\"newEntry__chapterTitleContainer\">\r\n               {\r\n                   isChapterTitleSet\r\n                   ?\r\n                   <div className=\"newEntry__chapterTitle\"\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'row'\r\n                        // flexGrow: '1',\r\n                        // backgroundColor: 'red'\r\n                    }}\r\n                   >\r\n                       <div onClick={e => {setIsChapterTitleSet(false)}}\r\n                            style={{\r\n                                flexGrow: '1'\r\n                            }}\r\n                       >\r\n                           {chapterTitle}\r\n                        </div>\r\n                        <div\r\n                            style={{\r\n                                display:'flex',\r\n                                flexDirection: 'row'\r\n                            }}\r\n                        >\r\n                            <div className=\"newEntry__minimizeButton\"\r\n                                    onClick={minimize}\r\n                            >\r\n                                &minus;\r\n                            </div>\r\n                            <div className=\"newEntry__maximizeButton\"\r\n                                    onClick={maximize}\r\n                                    style={{marginTop: '1px', fontSize: 'small', fontWeight: '900'}}\r\n                            >\r\n                                &#x1f5d6;\r\n                            </div>\r\n                            <div className=\"newEntry__maximizeButton\"\r\n                            onClick={e => {\r\n                                dispatch({\r\n                                    type: 'DELETE_CHAPTER',\r\n                                    item:{\r\n                                        chapterIndex: props.chapterIndex\r\n                                    }\r\n                                })\r\n                            }}\r\n                            style={{\r\n                                marginTop: '2px',\r\n                                fontWeight: 'bold'\r\n                            }}\r\n                       >\r\n                           X\r\n                       </div>\r\n                        </div>\r\n                   </div>\r\n                   :\r\n                   <form\r\n                   onSubmit={e => {e.preventDefault()}}\r\n                   //className=\"newEntry__title\"\r\n                    >\r\n                        <input \r\n                            placeholder=\"Enter Title\"\r\n                            value={chapterTitle}\r\n                            onChange= {e => {setChapterTitle(e.target.value)}} \r\n                            className=\"newEntry__titleInputBox\"\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            onClick={makeChapterTitle}\r\n                            className=\"newEntry__titleSetButton\"\r\n                        >\r\n                            Set\r\n                        </button>\r\n               </form>\r\n               }\r\n            </div>\r\n           <div>\r\n               {\r\n                   isMinimized \r\n                   ?\r\n                    <div\r\n                        style={{\r\n                            marginLeft: '85px'\r\n                        }}\r\n                    >\r\n                        . . .<br/>. . .<br/>\r\n                    </div>\r\n                   :\r\n                   //console.log({thisChapter.sections[0]})\r\n                   sections.map((section,index) => {\r\n                    //if(section.title !== '' && section.body !== ''){\r\n                        \r\n                        if(section){\r\n                            if(!props.isTesting){\r\n                                return(\r\n                                \r\n                                    <NewSection\r\n                                        isSet={section.isSet}\r\n                                        title={section.title}\r\n                                        body={section.content}\r\n                                        //makeSection={makeBody}\r\n                                        entryIndex={props.entryIndex}\r\n                                        chapterIndex={props.chapterIndex}\r\n                                        sectionIndex={index}\r\n                                        key={Math.random()}  \r\n                                        \r\n                                    />\r\n                                )\r\n                            }\r\n                            else{\r\n                                return(\r\n                                \r\n                                    <EntryBody\r\n                                        isSet={section.isSet}\r\n                                        //title={section.title}\r\n                                        //body={section.content}\r\n                                        //makeSection={makeBody}\r\n                                        // entryIndex={props.entryIndex}\r\n                                        chapterIndex={props.chapterIndex}\r\n                                        sectionIndex={index}\r\n                                        key={Math.random()}\r\n                                        content={section.content}\r\n                                        subEntries={section.subEntries}\r\n                                        isMinimized={section.isMinimized}\r\n                                    />\r\n                                )\r\n                            }\r\n                        }\r\n                    //}\r\n                    \r\n                })\r\n               }\r\n               {\r\n                   makeNewSection\r\n                   ?\r\n               <NewSection \r\n                   isSet={false}\r\n                   title=''\r\n                   body=''\r\n                   //makeSection={makeBody}\r\n                   entryIndex={props.entryIndex}\r\n                   chapterIndex={props.chapterIndex}\r\n                   sectionIndex={sections.length}\r\n               /> \r\n               :\r\n               <></>\r\n               }\r\n           </div>\r\n           <br />\r\n           {\r\n               isMinimized\r\n               ?\r\n                <></>\r\n                :\r\n                // <>\r\n                // <Button\r\n                //     onClick={openNewSection}\r\n                //     style={{\r\n                //         marginLeft: '50px',\r\n                //         fontSize:'30px'\r\n                //         // float: 'left'\r\n                //         // width: 'px'\r\n                //     }}\r\n                //     className=\"newEntry__addNewButton\"\r\n                //     color=\"primary\"\r\n                //     variant=\"outlined\"\r\n                //     size=\"small\"\r\n                    \r\n                // >\r\n                //     \t&#65291;\r\n                // </Button>\r\n                <button\r\n                // onClick={openNewSection}\r\n                onClick={makeNewEntry}\r\n                style={{\r\n                    marginLeft: '20px',\r\n                    marginTop: '15px'\r\n                    // float: 'left'\r\n                    // width: 'px'\r\n                }}\r\n                className=\"newEntry__addNewButton\"\r\n                >\r\n                    add new\r\n                </button>\r\n                \r\n            }\r\n           \r\n        </div>\r\n    )\r\n   \r\n}\r\n\r\nexport default NewEntry;","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\reducer.js",[],["98","99"],"C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\ViewBooks.js",["100","101","102","103","104","105","106","107"],"import React, { useState, useEffect } from 'react'\r\nimport './ViewBooks.css'\r\nimport { useStateValue } from './StateProvider.js'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { db } from './firebase.js'\r\nimport Header from './Header'\r\n\r\n\r\nfunction ViewBooks(){\r\n\r\n    const [{user, chapters}, dispatch] = useStateValue();\r\n    const [username, setUsername] = useState(user.split('@'))\r\n    const [collection, setCollection] = useState([])\r\n    \r\n    const history = useHistory();\r\n\r\n    const confirmDelete = (title) => {\r\n        let answer = window.confirm(\"Are you sure you want to permanetly delete this book of notes?\");\r\n        if (answer) {\r\n            try{\r\n                db.collection(username[0]).doc(title).delete()\r\n                    console.log(\"Document successfully deleted!\");\r\n                }catch {\r\n                    console.log(\"Error removing document: \");\r\n                }\r\n        }\r\n        else {\r\n            //Do Nothing\r\n        }\r\n        \r\n    }\r\n\r\n    const makeNewNote = (e) => {\r\n        dispatch({\r\n            type: 'LOAD_BOOK',\r\n            item: {\r\n                chapters: [\r\n                    {\r\n                        title: 'First Subject',\r\n                        bodies: [\r\n                            {\r\n                                title: 'Click to change the title',\r\n                                content: 'Click to change the content',\r\n                                isMinimized: false\r\n                            \r\n                            }\r\n                        ]\r\n                    }\r\n                ],\r\n                bookTitle: 'New Book'\r\n            }\r\n        })\r\n        history.push('/makenotes')\r\n    }\r\n\r\n    const makeNewTesting = (e) => {\r\n        dispatch({\r\n            type: 'LOAD_BOOK',\r\n            item: {\r\n                chapters: [\r\n                    {\r\n                        title: 'First Chapter',\r\n                        isMinimized: false,\r\n                        bodies: [\r\n                            {\r\n                                content: '',\r\n                                isMinimized: false,\r\n                                subEntries: [\r\n                                    \r\n                                ],\r\n                                isSet: false\r\n                                \r\n                            \r\n                            }\r\n                        ]\r\n                    }\r\n                ],\r\n                bookTitle: 'New Book'\r\n            }\r\n        })\r\n        history.push('/makenotes')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(user == '' || user == undefined){\r\n            history.push('/login')\r\n        }\r\n            \r\n        else{\r\n            //setCollection(db.collection('testuser'))\r\n            db.collection(user)\r\n            //.orderBy(\"timestamp\", \"asc\")\r\n            .onSnapshot(snapshot => {\r\n                \r\n                setCollection(snapshot.docs.map(doc =>(\r\n                        {\r\n                            \r\n                            bookTitle: doc.data().bookTitle,\r\n                            chapters: doc.data().chapters\r\n\r\n                        }\r\n                )))\r\n            \r\n            })\r\n        }\r\n        \r\n    }, [])\r\n\r\n    return(\r\n        <div className=\"viewbooks\">\r\n            <div>Here is a collection of your notes:</div>\r\n            {/* {console.log(collection)} */}\r\n            {\r\n                collection.length > 0 \r\n                ?\r\n                    //console.log(collection)\r\n                    collection.map(book => {\r\n                        if(book){\r\n                            return(\r\n                            <div\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row'\r\n                                }}\r\n                            >\r\n                                <div \r\n                                    key={Math.random()}\r\n                                    className=\"viewbooks__collection\"\r\n                                    onClick={e => {\r\n                                        dispatch({\r\n                                            type: 'LOAD_BOOK',\r\n                                            item: {\r\n                                                chapters: book.chapters,\r\n                                                bookTitle: book.bookTitle\r\n                                            }\r\n                                        })\r\n                                        history.push('/makenotes')\r\n                                    }}    \r\n                                    style={{cursor:'default'}}\r\n                                >\r\n                                    {book.bookTitle}\r\n                                </div>\r\n                                <div\r\n                                    className=\"viewbooks__delete\"\r\n                                    onClick={e => {confirmDelete(book.bookTitle)}}\r\n                                >\r\n                                    X\r\n                                </div>\r\n                            </div>\r\n                            )\r\n                        }\r\n                    })\r\n                :\r\n                <div className=\"viewbooks__message\">\r\n                    There are 0 notes saved in your collection\r\n                </div>\r\n            }\r\n\r\n            <button\r\n                className=\"viewbooks__button\"\r\n                onClick={makeNewTesting}\r\n            >\r\n                Create New Note\r\n            </button>\r\n\r\n            {/* <button\r\n                className=\"viewbooks__button\"\r\n                onClick={makeNewTesting}\r\n            >\r\n                Create New Testing\r\n            </button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewBooks;","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\App.js",["108","109","110","111","112","113","114"],"import React, { useState } from 'react'\r\nimport './App.css';\r\n\r\nimport { entries } from \"./entries.js\";\r\nimport Entry from './Entry.js'\r\nimport NewEntry from './NewEntry.js'\r\n\r\nimport { useStateValue } from './StateProvider.js'\r\nimport Header from './Header';\r\nimport MainBody from './MainBody';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport Login from './Login.js'\r\nimport ViewBooks from './ViewBooks.js'\r\nimport TestingBody from './TestingBody.js'\r\n\r\n\r\nfunction App(){\r\n\r\n  const [{}, dispatch] = useStateValue();\r\n\r\n  return(\r\n  <Router>\r\n    <div className=\"app\">\r\n      <Switch>\r\n        \r\n        \r\n\r\n        {/* <Route path=\"/makenotes\">\r\n          <Header />\r\n          <MainBody />\r\n        </Route> */}\r\n\r\n        <Route path=\"/makenotes\">\r\n          <Header />\r\n          <TestingBody />\r\n        </Route>\r\n\r\n        {/* <Route path=\"/maketesting\">\r\n          <Header />\r\n          <TestingBody />\r\n        </Route> */}\r\n\r\n        <Route path=\"/books\">\r\n          <Header />\r\n          <ViewBooks />\r\n        </Route>\r\n\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n\r\n        <Route path=\"/\">\r\n          <Login />\r\n        </Route>\r\n        \r\n\r\n        {/* <Route path=\"/\">\r\n          <Header />\r\n          <MainBody />\r\n        </Route> */}\r\n\r\n      </Switch>\r\n    </div>\r\n  </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\TestingBody.js",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129"],"import React, { useState, useEffect } from 'react'\r\nimport './MainBody.css';\r\n\r\nimport { entries } from \"./entries.js\";\r\nimport Entry from './Entry.js'\r\nimport NewEntry from './NewEntry.js'\r\n\r\nimport { useStateValue } from './StateProvider.js'\r\nimport Scroller from './Scroller.js'\r\nimport { db } from './firebase.js'\r\nimport { useHistory } from 'react-router-dom'\r\nimport MainBody from './MainBody.js'\r\nimport EntryBody from './EntryBody.js'\r\n//import TestingBody from '.TestingBody.js'\r\nimport gsap from 'gsap';\r\n\r\n\r\nfunction TestingBody(){\r\n  // constructor(){\r\n  //   super()\r\n  //   this.state = {\r\n  //     entries: entries,\r\n  //     localEntriesArray: [],\r\n  //     makeNewNote: false\r\n  //   }\r\n  // }\r\n  const [{user, chapters, bookTitle }, dispatch] = useStateValue();\r\n  const [username, setUsername] = useState(user.split('@'))\r\n  const [entrees, setEntrees] = useState(entries)\r\n  const [makeNewNote, setMakeNewNote] = useState(false)\r\n  const [emptySection, setEmptySection] = useState([{title: '', content:''}])\r\n  const [newTitle, setNewTitle] = useState(bookTitle)\r\n  const [isBookTitleSet, setIsBookTitleSet] = useState(true)\r\n  const history = useHistory();\r\n\r\n\r\n  const makeNewEntry = (e) => {\r\n    dispatch({\r\n        type: 'ADD_NEW_ENTRY',\r\n        item:{\r\n            title: 'New Chapter',\r\n            bodies: [\r\n                {\r\n                    content: '',\r\n                    isMinimized: false,\r\n                    subEntries: [\r\n                        \r\n                    ],\r\n                    isSet: false\r\n                    \r\n                \r\n                }\r\n            ]\r\n        }\r\n    })\r\n  }\r\n\r\n  const makeNotebookTitle = (e) =>{\r\n      e.preventDefault()\r\n      setIsBookTitleSet(true)\r\n      dispatch({\r\n          type: 'SAVE_TITLE',\r\n          item: {\r\n              title: newTitle\r\n          }\r\n\r\n      })\r\n  }\r\n\r\n  const animate = (flag) => {\r\n    if(flag == true){\r\n        gsap.to('.saveSuccess', {\r\n          display: 'inline',\r\n          y: -10,\r\n          duration: 1,\r\n          yoyoEase:true,\r\n          repeat:0,\r\n          onComplete: animateOut\r\n        })\r\n      }\r\n      else{\r\n        gsap.to('.saveFail', {\r\n          display: 'inline',\r\n          y: -10,\r\n          duration: 1,\r\n          yoyoEase:true,\r\n          repeat:0,\r\n          onComplete: animateOut\r\n        })\r\n      }\r\n  }\r\n\r\n  const animateOut = () => {\r\n    gsap.to('.saveSuccess', {\r\n      display: 'none'\r\n    })\r\n    gsap.to('.saveFail', {\r\n      display: 'none'\r\n    })\r\n  }\r\n\r\n  const saveTheBook = (e) => {\r\n      e.preventDefault();\r\n\r\n      \r\n      dispatch({\r\n          type: 'SAVE_BOOK',\r\n          item:{\r\n            chapters: chapters,\r\n            user: user\r\n          }\r\n      })\r\n      try{db.collection(user).doc(bookTitle).set({\r\n          bookTitle:bookTitle,\r\n          chapters: chapters\r\n      })\r\n      animate(true)\r\n    }\r\n      catch(err){\r\n        console.log(err)\r\n        animate(false)\r\n      }\r\n    // animate(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(user == '' || user == undefined){\r\n        history.push('/')\r\n    }\r\n  },[])\r\n\r\n    return (\r\n      <div className=\"mainbody\">\r\n\r\n       <div> \r\n        <div className=\"mainbody__titleContainer\">\r\n        <div \r\n            className=\"mainbody__title\"\r\n            \r\n            >\r\n        {\r\n                isBookTitleSet \r\n                ?\r\n                <>\r\n                <div\r\n                    onClick={e => {setIsBookTitleSet(false)}}\r\n                    style={{}}\r\n                >\r\n                    {newTitle}\r\n                </div>\r\n                \r\n                \r\n            \r\n                </>\r\n                :\r\n                <form>\r\n                <input \r\n                    placeholder=\"Enter Title\"\r\n                    value={newTitle}\r\n                    onChange={e => {setNewTitle(e.target.value)}}\r\n                    className=\"mainbody__titleBox\"\r\n                    style={{\r\n                        \r\n                    }}\r\n                />\r\n                <button\r\n                    type='submit'\r\n                    onClick={makeNotebookTitle}\r\n                    style={{\r\n                        \r\n                    }}\r\n                    className=\"mainbody__setTitle\"\r\n                >\r\n                    Set Title\r\n                </button>\r\n                </form>\r\n            }\r\n            \r\n            </div>\r\n        </div>\r\n        <div className=\"mainbody__hamurgerContainer\">\r\n        <button \r\n            className=\"mainbody__hamburger\"\r\n            style={{}}\r\n            onClick={e => {\r\n                let navbar = document.querySelector('.mainbody__navbar')\r\n                let ham = document.querySelector('.mainbody__hamburger')\r\n\r\n                navbar.classList.toggle(\"mainbody__showNavAnimate\")\r\n                ham.classList.toggle(\"mainbody__hamburgerClose\")\r\n\r\n            }}\r\n            ></button>\r\n            <nav className=\"mainbody__navbar\">\r\n                <ul style={{}}>\r\n                <li \r\n                    onClick={makeNewEntry}\r\n                    className=\"navbar_first\" style={{}}>New Entry</li>\r\n                <li\r\n                    onClick={saveTheBook}\r\n                >Save Book</li>\r\n                <li\r\n                    onClick={e => {history.push('/')}}\r\n                >Exit</li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n        <div \r\n                className=\"mainbody__options\"\r\n                // style={{float:'right', marginTop:'-40px', position:'relative'}}\r\n                //  style={{marginLeft:'500px', position:'fixed', marginTop:'-50px'}}\r\n                 >\r\n                <button\r\n                    //onClick={e => {setMakeNewNote(true)}}\r\n                    onClick={makeNewEntry}\r\n                    style={{float:'left'}}\r\n                >\r\n                    New Entry\r\n                </button>\r\n\r\n                \r\n                \r\n                    <button\r\n                        \r\n                        onClick={saveTheBook}\r\n                        style={{\r\n                            marginTop: '15px',\r\n                            \r\n                    \r\n                        }}\r\n                    >\r\n                        Save Book\r\n                    </button>\r\n                    \r\n\r\n                <button\r\n                    //onClick={e => {setMakeNewNote(true)}}\r\n                    \r\n                    onClick={e => {history.push('/')}}\r\n                >\r\n                    Exit \r\n                </button>\r\n                \r\n\r\n            </div>\r\n        </div>\r\n        <div className=\"mainbody__main\">\r\n            <div className=\"mainbody__entries\">\r\n            <Scroller>\r\n                \r\n            {chapters.map((entry, index) => {\r\n                return<>\r\n                \r\n                {/* <EntryBody \r\n                    isSet={true}\r\n                    title = \"test\"\r\n                    sections = {entry.bodies}\r\n                    key={Math.random()}\r\n                    entryIndex={index}\r\n                    chapterIndex={index}\r\n                    isMinimized={entry.isMinimized}\r\n                /> */}\r\n\r\n                <NewEntry  \r\n                    isSet={true}\r\n                    title = {entry.title}\r\n                    sections = {entry.bodies}\r\n                    key={Math.random()}\r\n                    // entryIndex={index}\r\n                    chapterIndex={index}\r\n                    isMinimized={entry.isMinimized}\r\n                    isTesting={true}\r\n                    content={entry.bodies}\r\n                />\r\n\r\n                <br />\r\n                </>\r\n            })}\r\n            <div\r\n                className=\"saveBox\"\r\n                style={{\r\n                    // border: '1px solid black',\r\n                    // width: '100px',\r\n                    // height: '100px',\r\n                    position: 'absolute',\r\n                    marginLeft: '40%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column'\r\n                }}\r\n            >\r\n                <div\r\n                    className=\"saveSuccess\"\r\n                    style={{\r\n                        width: '100px',\r\n                        backgroundColor: 'green',\r\n                        textAlign: 'center',\r\n                        height: '30px',\r\n                        fontWeight: 'bold',\r\n                        display: 'none'\r\n                    }}\r\n                >\r\n                    Save Sucess\r\n                </div>\r\n                <div\r\n                    className=\"saveFail\"\r\n                    style={{\r\n                        width: '100px',\r\n                        backgroundColor: 'red',\r\n                        textAlign: 'center',\r\n                        height: '30px',\r\n                        fontWeight: 'bold',\r\n                        display: 'none'\r\n                    }}\r\n                >\r\n                    Save Failed\r\n                </div>\r\n            </div>\r\n\r\n            <div\r\n                className='mainbody__newEntryButton'\r\n            >\r\n                <button\r\n\r\n                    // onClick={makeNewEntry}\r\n                    onClick={makeNewEntry}\r\n                    className=\"mainbody__addNewButton\"\r\n                >\r\n                New Entry\r\n                </button>\r\n            </div>\r\n            </Scroller>\r\n            </div>\r\n            \r\n        </div>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default TestingBody;\r\n","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\EntryBody.js",["130","131","132","133","134","135","136","137","138","139","140"],"C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\SubEntry.js",["141","142","143"],"C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\Login.js",["144","145","146","147","148","149","150"],"import React, {useState} from 'react'\r\nimport './Login.css'\r\nimport { auth, provider } from './firebase.js'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useStateValue } from './StateProvider.js'\r\nimport firebase from 'firebase'\r\n// import { facebookProvider, githubProvider, googleProvider } from './config/authMethods'\r\n//import socialMediaAuth from './service/auth'\r\n\r\n\r\n\r\nfunction Login(){\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [userError, setUserError] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [{user, chapters}, dispatch] = useStateValue();\r\n    const history = useHistory();\r\n    \r\n    const handleOnClick = () => {\r\n        //const res = await socialMediaAuth(provider);\r\n        //onsole.log(res);\r\n        //let provider = new firebase.auth().GoogleAuthProvider()\r\n        auth\r\n        .signInWithPopup(provider)\r\n        .then(res=> {\r\n            //let data = res\r\n            //console.log(res.user.email)\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                item: {\r\n                    user: res.user.email\r\n                }\r\n            })\r\n            history.push('/books')\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        }\r\n\r\n        )\r\n\r\n    };\r\n\r\n    const loginUser = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(email == '' || password == ''){\r\n            setUserError(true)\r\n            setErrorMessage('Please fill out both fields')\r\n        }\r\n        else{\r\n            auth\r\n            .signInWithEmailAndPassword(email, password)\r\n            //'auth' is returnedS onSuccess:\r\n            .then(auth => { \r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    item: {\r\n                        user: email\r\n                    }\r\n                })\r\n                history.push('/books');\r\n            })\r\n            .catch(\r\n                error =>{ \r\n                    //alert(error.message)\r\n                    setUserError(true)\r\n                    setErrorMessage(\"The login was unsuccessful\")\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    const createUser = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(email == '' || password == ''){\r\n            setUserError(true)\r\n            setErrorMessage('Please fill out both fields')\r\n        }\r\n        else{\r\n        auth\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then((auth) => {\r\n            //.then() is called after a successful .createUserWit.....(). We log to see it.\r\n            console.log(auth)\r\n\r\n            //if successful, redirect to home.\r\n            if(auth){\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    item: {\r\n                        user: email\r\n                    }\r\n                })\r\n                history.push('/books')\r\n            }\r\n        })\r\n        .catch(\r\n            error => {\r\n                //alert(error.message)\r\n                console.log(error)\r\n                setUserError(true)\r\n                setErrorMessage(error.message)\r\n            }\r\n            \r\n        )\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"login\">\r\n            <div className=\"login__logo\">Notebook Online</div>\r\n            \r\n            {/* <form> */}\r\n                <h5>Email</h5>\r\n                <input \r\n                    value={email}\r\n                    onChange={e => {setEmail(e.target.value)}}\r\n                    type=\"text\"\r\n                />\r\n                <br />\r\n                <h5>Password</h5>\r\n                <input \r\n                    value={password}\r\n                    onChange={e => {setPassword(e.target.value)}}\r\n                    type=\"password\"\r\n                />\r\n                <br />\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        marginLeft: '-20px'\r\n                    }}\r\n                >\r\n                    <button\r\n                        type=\"submit\"\r\n                        onClick={loginUser}\r\n                    >\r\n                        Login\r\n                    </button>\r\n                    <button\r\n                        // type=\"submit\"\r\n                        onClick={createUser}\r\n                    >\r\n                        Create\r\n                    </button>\r\n                \r\n                    <br />\r\n                    \r\n                    <button\r\n                        onClick={e => handleOnClick()}\r\n                        style={{\r\n                            backgroundColor: '#BF953F'\r\n                        }}\r\n                    >\r\n                        Sign-in With Google\r\n                    </button>\r\n                </div>\r\n            {/* </form> */}\r\n            \r\n            {\r\n                userError\r\n                ?\r\n                <div className=\"login__error\">Error: {errorMessage} </div>\r\n                :\r\n                <></>\r\n            }\r\n            <div className=\"login__bottom\">\r\n                <p>*You do not need to use an actual email address. But use the same credentials to log-in again and see the notes you saved for that email</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\Scroller.js",[],"C:\\Users\\placi\\Desktop\\hp-development\\react\\note-taker\\src\\Header.js",["151"],{"ruleId":"152","severity":1,"message":"153","line":8,"column":8,"nodeType":"154","messageId":"155","endLine":8,"endColumn":16},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"152","severity":1,"message":"160","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":13},{"ruleId":"152","severity":1,"message":"161","line":25,"column":20,"nodeType":"154","messageId":"155","endLine":25,"endColumn":31},{"ruleId":"152","severity":1,"message":"162","line":26,"column":10,"nodeType":"154","messageId":"155","endLine":26,"endColumn":17},{"ruleId":"152","severity":1,"message":"163","line":26,"column":19,"nodeType":"154","messageId":"155","endLine":26,"endColumn":29},{"ruleId":"152","severity":1,"message":"164","line":27,"column":23,"nodeType":"154","messageId":"155","endLine":27,"endColumn":37},{"ruleId":"152","severity":1,"message":"165","line":28,"column":24,"nodeType":"154","messageId":"155","endLine":28,"endColumn":39},{"ruleId":"152","severity":1,"message":"166","line":12,"column":13,"nodeType":"154","messageId":"155","endLine":12,"endColumn":23},{"ruleId":"152","severity":1,"message":"167","line":15,"column":11,"nodeType":"154","messageId":"155","endLine":15,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":20,"column":31,"nodeType":"170","messageId":"171","endLine":20,"endColumn":33},{"ruleId":"172","severity":1,"message":"173","line":55,"column":8,"nodeType":"174","endLine":55,"endColumn":10,"suggestions":"175"},{"ruleId":"152","severity":1,"message":"176","line":3,"column":9,"nodeType":"154","messageId":"155","endLine":3,"endColumn":18},{"ruleId":"152","severity":1,"message":"177","line":3,"column":20,"nodeType":"154","messageId":"155","endLine":3,"endColumn":26},{"ruleId":"152","severity":1,"message":"178","line":24,"column":21,"nodeType":"154","messageId":"155","endLine":24,"endColumn":32},{"ruleId":"152","severity":1,"message":"179","line":25,"column":11,"nodeType":"154","messageId":"155","endLine":25,"endColumn":22},{"ruleId":"152","severity":1,"message":"180","line":27,"column":12,"nodeType":"154","messageId":"155","endLine":27,"endColumn":20},{"ruleId":"152","severity":1,"message":"181","line":28,"column":24,"nodeType":"154","messageId":"155","endLine":28,"endColumn":38},{"ruleId":"152","severity":1,"message":"182","line":29,"column":11,"nodeType":"154","messageId":"155","endLine":29,"endColumn":21},{"ruleId":"152","severity":1,"message":"183","line":29,"column":23,"nodeType":"154","messageId":"155","endLine":29,"endColumn":36},{"ruleId":"152","severity":1,"message":"184","line":45,"column":10,"nodeType":"154","messageId":"155","endLine":45,"endColumn":24},{"ruleId":"172","severity":1,"message":"185","line":97,"column":7,"nodeType":"174","endLine":97,"endColumn":9,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":189,"column":49,"nodeType":"189","messageId":"190","endLine":189,"endColumn":51},{"ruleId":"156","replacedBy":"191"},{"ruleId":"158","replacedBy":"192"},{"ruleId":"152","severity":1,"message":"193","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":14},{"ruleId":"152","severity":1,"message":"180","line":11,"column":19,"nodeType":"154","messageId":"155","endLine":11,"endColumn":27},{"ruleId":"152","severity":1,"message":"161","line":12,"column":22,"nodeType":"154","messageId":"155","endLine":12,"endColumn":33},{"ruleId":"152","severity":1,"message":"194","line":33,"column":11,"nodeType":"154","messageId":"155","endLine":33,"endColumn":22},{"ruleId":"168","severity":1,"message":"169","line":85,"column":17,"nodeType":"170","messageId":"171","endLine":85,"endColumn":19},{"ruleId":"168","severity":1,"message":"169","line":85,"column":31,"nodeType":"170","messageId":"171","endLine":85,"endColumn":33},{"ruleId":"172","severity":1,"message":"195","line":107,"column":8,"nodeType":"174","endLine":107,"endColumn":10,"suggestions":"196"},{"ruleId":"187","severity":1,"message":"188","line":117,"column":41,"nodeType":"189","messageId":"190","endLine":117,"endColumn":43},{"ruleId":"152","severity":1,"message":"197","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"198","line":4,"column":10,"nodeType":"154","messageId":"155","endLine":4,"endColumn":17},{"ruleId":"152","severity":1,"message":"160","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":13},{"ruleId":"152","severity":1,"message":"199","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":16},{"ruleId":"152","severity":1,"message":"153","line":10,"column":8,"nodeType":"154","messageId":"155","endLine":10,"endColumn":16},{"ruleId":"200","severity":1,"message":"201","line":19,"column":10,"nodeType":"202","messageId":"171","endLine":19,"endColumn":12},{"ruleId":"152","severity":1,"message":"203","line":19,"column":14,"nodeType":"154","messageId":"155","endLine":19,"endColumn":22},{"ruleId":"152","severity":1,"message":"160","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":13},{"ruleId":"152","severity":1,"message":"153","line":12,"column":8,"nodeType":"154","messageId":"155","endLine":12,"endColumn":16},{"ruleId":"152","severity":1,"message":"204","line":13,"column":8,"nodeType":"154","messageId":"155","endLine":13,"endColumn":17},{"ruleId":"152","severity":1,"message":"205","line":28,"column":10,"nodeType":"154","messageId":"155","endLine":28,"endColumn":18},{"ruleId":"152","severity":1,"message":"161","line":28,"column":20,"nodeType":"154","messageId":"155","endLine":28,"endColumn":31},{"ruleId":"152","severity":1,"message":"162","line":29,"column":10,"nodeType":"154","messageId":"155","endLine":29,"endColumn":17},{"ruleId":"152","severity":1,"message":"163","line":29,"column":19,"nodeType":"154","messageId":"155","endLine":29,"endColumn":29},{"ruleId":"152","severity":1,"message":"194","line":30,"column":10,"nodeType":"154","messageId":"155","endLine":30,"endColumn":21},{"ruleId":"152","severity":1,"message":"164","line":30,"column":23,"nodeType":"154","messageId":"155","endLine":30,"endColumn":37},{"ruleId":"152","severity":1,"message":"206","line":31,"column":10,"nodeType":"154","messageId":"155","endLine":31,"endColumn":22},{"ruleId":"152","severity":1,"message":"165","line":31,"column":24,"nodeType":"154","messageId":"155","endLine":31,"endColumn":39},{"ruleId":"168","severity":1,"message":"169","line":71,"column":13,"nodeType":"170","messageId":"171","endLine":71,"endColumn":15},{"ruleId":"168","severity":1,"message":"169","line":127,"column":13,"nodeType":"170","messageId":"171","endLine":127,"endColumn":15},{"ruleId":"168","severity":1,"message":"169","line":127,"column":27,"nodeType":"170","messageId":"171","endLine":127,"endColumn":29},{"ruleId":"172","severity":1,"message":"195","line":130,"column":5,"nodeType":"174","endLine":130,"endColumn":7,"suggestions":"207"},{"ruleId":"152","severity":1,"message":"177","line":2,"column":20,"nodeType":"154","messageId":"155","endLine":2,"endColumn":26},{"ruleId":"152","severity":1,"message":"208","line":10,"column":26,"nodeType":"154","messageId":"155","endLine":10,"endColumn":41},{"ruleId":"152","severity":1,"message":"209","line":12,"column":26,"nodeType":"154","messageId":"155","endLine":12,"endColumn":40},{"ruleId":"152","severity":1,"message":"166","line":14,"column":13,"nodeType":"154","messageId":"155","endLine":14,"endColumn":23},{"ruleId":"152","severity":1,"message":"210","line":15,"column":12,"nodeType":"154","messageId":"155","endLine":15,"endColumn":21},{"ruleId":"152","severity":1,"message":"183","line":19,"column":24,"nodeType":"154","messageId":"155","endLine":19,"endColumn":37},{"ruleId":"152","severity":1,"message":"211","line":20,"column":25,"nodeType":"154","messageId":"155","endLine":20,"endColumn":37},{"ruleId":"152","severity":1,"message":"167","line":23,"column":11,"nodeType":"154","messageId":"155","endLine":23,"endColumn":27},{"ruleId":"152","severity":1,"message":"212","line":27,"column":11,"nodeType":"154","messageId":"155","endLine":27,"endColumn":22},{"ruleId":"168","severity":1,"message":"169","line":28,"column":31,"nodeType":"170","messageId":"171","endLine":28,"endColumn":33},{"ruleId":"172","severity":1,"message":"213","line":115,"column":8,"nodeType":"174","endLine":115,"endColumn":10,"suggestions":"214"},{"ruleId":"152","severity":1,"message":"215","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":35},{"ruleId":"152","severity":1,"message":"177","line":4,"column":20,"nodeType":"154","messageId":"155","endLine":4,"endColumn":26},{"ruleId":"152","severity":1,"message":"180","line":11,"column":13,"nodeType":"154","messageId":"155","endLine":11,"endColumn":21},{"ruleId":"152","severity":1,"message":"216","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":16},{"ruleId":"152","severity":1,"message":"217","line":17,"column":13,"nodeType":"154","messageId":"155","endLine":17,"endColumn":17},{"ruleId":"152","severity":1,"message":"180","line":17,"column":19,"nodeType":"154","messageId":"155","endLine":17,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":48,"column":18,"nodeType":"170","messageId":"171","endLine":48,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":48,"column":36,"nodeType":"170","messageId":"171","endLine":48,"endColumn":38},{"ruleId":"168","severity":1,"message":"169","line":78,"column":18,"nodeType":"170","messageId":"171","endLine":78,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":78,"column":36,"nodeType":"170","messageId":"171","endLine":78,"endColumn":38},{"ruleId":"152","severity":1,"message":"161","line":8,"column":22,"nodeType":"154","messageId":"155","endLine":8,"endColumn":33},"no-unused-vars","'MainBody' is defined but never used.","Identifier","unusedVar","no-native-reassign",["218"],"no-negated-in-lhs",["219"],"'Entry' is defined but never used.","'setUsername' is assigned a value but never used.","'entrees' is assigned a value but never used.","'setEntrees' is assigned a value but never used.","'setMakeNewNote' is assigned a value but never used.","'setEmptySection' is assigned a value but never used.","'newSection' is assigned a value but never used.","'makeSectionTitle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["220"],"'TextField' is defined but never used.","'Button' is defined but never used.","'setSections' is assigned a value but never used.","'thisChapter' is assigned a value but never used.","'chapters' is assigned a value but never used.","'setIsMinimized' is assigned a value but never used.","'subEntries' is assigned a value but never used.","'setSubEntries' is assigned a value but never used.","'openNewSection' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chapterTitle' and 'sections'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setThisChapter' needs the current value of 'chapterTitle'.",["221"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["218"],["219"],"'Header' is defined but never used.","'makeNewNote' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.",["222"],"'useState' is defined but never used.","'entries' is defined but never used.","'NewEntry' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'dispatch' is assigned a value but never used.","'EntryBody' is defined but never used.","'username' is assigned a value but never used.","'emptySection' is assigned a value but never used.",["223"],"'setSectionTitle' is assigned a value but never used.","'setSectionBody' is assigned a value but never used.","'isThisSet' is assigned a value but never used.","'setIsMinized' is assigned a value but never used.","'makeSection' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chapters', 'props', and 'subEntries'. Either include them or remove the dependency array.",["224"],"'useEffect' is defined but never used.","'firebase' is defined but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"229","fix":"231"},{"desc":"232","fix":"233"},"Update the dependencies array to be: [props]",{"range":"234","text":"235"},"Update the dependencies array to be: [chapterTitle, sections]",{"range":"236","text":"237"},"Update the dependencies array to be: [history, user]",{"range":"238","text":"239"},{"range":"240","text":"239"},"Update the dependencies array to be: [chapters, props, subEntries]",{"range":"241","text":"242"},[1896,1898],"[props]",[2708,2710],"[chapterTitle, sections]",[3252,3254],"[history, user]",[3100,3102],[3720,3722],"[chapters, props, subEntries]"]